<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tarzan.maxkb4j.module.dataset.mapper.DocumentMapper">

    <!-- 多个字段中某个字段的类型处理器配置 -->
    <resultMap id="docResultMap" type="com.tarzan.maxkb4j.module.dataset.domain.vo.DocumentVO">
        <result property="meta" column="meta" typeHandler="com.baomidou.mybatisplus.extension.handlers.FastjsonTypeHandler" />
        <result property="statusMeta" column="status_meta" typeHandler="com.baomidou.mybatisplus.extension.handlers.FastjsonTypeHandler" />
    </resultMap>
    <update id="updateStatusMetaByIds">
        UPDATE "document"
        SET status_meta = jsonb_set ( "document".status_meta, '{aggs}', tmp.status_meta )
            FROM
        (
        SELECT COALESCE
                ( jsonb_agg ( jsonb_delete ( ( row_to_json ( record ) :: JSONB ), 'document_id' ) ), '[]' :: JSONB ) AS status_meta,
                document_id AS document_id
        FROM
                (
                SELECT
                        "paragraph".status,
                        "count" ( "paragraph"."id" ),
                        "document"."id" AS document_id
                FROM
                        "document"
                        LEFT JOIN "paragraph" ON "document"."id" = paragraph.document_id
                WHERE "document"."id" IN
                    <foreach item="id" collection="ids" open="(" separator="," close=")">
                        #{id}
                    </foreach>
            GROUP BY
            "paragraph".status,
            "document"."id"
            ) record
            GROUP BY
            document_id
            ) tmp
        WHERE "document".id="tmp".document_id;
    </update>
    <update id="updateStatusByIds">
        UPDATE "document"
        SET status = reverse (
        SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM 1 FOR (#{type}-1) ) || #{status} || SUBSTRING ( reverse (
        LPAD( status, 3, 'n' ) ) :: TEXT FROM (#{type}+1) )
        ),
        status_meta = jsonb_set (
        "document".status_meta,
        ARRAY['state_time', #{type}::TEXT],
        jsonb_set (
        COALESCE ("document".status_meta #> ARRAY['state_time', #{type}::TEXT], jsonb_build_object ( #{status}, now() )
        ),
        ARRAY[#{status}::TEXT],
        CONCAT ( '"', now( ), '"' ) :: JSONB
        )
        ) WHERE "id" IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <update id="updateCharLengthById">
        UPDATE document doc
        SET char_length = COALESCE((
                                       SELECT SUM(CHAR_LENGTH(content))
                                       FROM paragraph p
                                       WHERE p.document_id = doc.id
                                   ), 0)
        WHERE doc.id =#{id};
    </update>
    <select id="selectDocPage"  resultMap="docResultMap">
        SELECT
        d.*,
        COUNT ( p.document_id ) AS paragraph_count
        FROM
        document d
        LEFT JOIN "paragraph" p ON d.ID = p.document_id
        <where>
            d.dataset_id = #{datasetId}
            <if test="query.name != null and query.name != ''">
                and d.name like CONCAT('%',#{query.name},'%')
            </if>
            <if test="query.selectUserId != null and query.selectUserId != ''">
                and d.user_id = #{query.selectUserId}
            </if>
        </where>
        GROUP BY d.ID
        ORDER BY d.create_time DESC
    </select>
</mapper>
