<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tarzan.maxkb4j.module.dataset.mapper.EmbeddingMapper">
    <select id="embeddingSearch" resultType="com.tarzan.maxkb4j.module.dataset.domain.vo.HitTestVO">
        SELECT paragraph_id,
               score
        FROM (SELECT DISTINCT
              ON (paragraph_id)
                  paragraph_id,
                  score
              FROM
                  ( SELECT paragraph_id, (2 - (<![CDATA[embedding <=> CAST (#{referenceEmbedding  } AS vector)]]>))/2 AS score
              FROM embedding
              WHERE
                  dataset_id IN
                    <foreach item="id" collection="datasetIds" open="(" separator="," close=")">
                        #{id}
                    </foreach>
              AND is_active) TEMP
              ORDER BY
                  paragraph_id,
                 score DESC) DISTINCT_TEMP
        WHERE score > #{minScore}
        ORDER BY score DESC
            LIMIT #{maxResults}
    </select>

    <select id="keywordsSearch" resultType="com.tarzan.maxkb4j.module.dataset.domain.vo.HitTestVO">
        SELECT
            paragraph_id,
            score
        FROM
            (
            SELECT DISTINCT ON (paragraph_id) paragraph_id,
                   ts_rank_cd( search_vector, to_tsquery(#{query.query_text} ), 0 ) AS score
                              FROM embedding
                                WHERE
                                dataset_id IN
                                <foreach item="id" collection="datasetIds" open="(" separator="," close=")">
                                    #{id}
                                </foreach>
                                AND is_active
              ) T
        WHERE T.score > #{query.similarity}
        ORDER BY
            T.score DESC
            LIMIT #{query.top_number}
    </select>


    <select id="HybridSearch" resultType="com.tarzan.maxkb4j.module.dataset.domain.vo.HitTestVO">
        SELECT paragraph_id,
               score
        FROM (SELECT DISTINCT
              ON (paragraph_id)
                  paragraph_id,
                  score
              FROM
                  ((1-( <![CDATA[embedding <=> CAST(#{ embedding } AS vector)]]> ))+ts_rank_cd( search_vector, to_tsquery(#{query.query_text} ), 0 )) AS score
                  FROM embedding
                  WHERE
                    dataset_id IN
                    <foreach item="id" collection="datasetIds" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                  AND is_active) TEMP
              ORDER BY
                  paragraph_id,
                  score DESC) DISTINCT_TEMP
        WHERE score > #{query.similarity }
        ORDER BY score DESC
            LIMIT #{query.top_number}
    </select>

</mapper>
