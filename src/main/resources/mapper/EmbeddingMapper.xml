<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tarzan.maxkb4j.module.embedding.mapper.EmbeddingMapper">
    <select id="embeddingSearch" resultType="com.tarzan.maxkb4j.module.dataset.vo.HitTestVO">
        SELECT paragraph_id,
               comprehensive_score,
               comprehensive_score AS similarity
        FROM (SELECT DISTINCT
              ON (paragraph_id)
                  paragraph_id,
                  similarity AS comprehensive_score
              FROM
                  ( SELECT paragraph_id, (2 - (<![CDATA[embedding <=> CAST (#{referenceEmbedding  } AS vector)]]>))/2 AS similarity
              FROM embedding
              WHERE
                  dataset_id IN
                    <foreach item="id" collection="datasetIds" open="(" separator="," close=")">
                        #{id}
                    </foreach>
              AND is_active) TEMP
              ORDER BY
                  paragraph_id,
                  similarity DESC) DISTINCT_TEMP
        WHERE comprehensive_score > #{minScore}
        ORDER BY comprehensive_score DESC
            LIMIT #{maxResults}
    </select>
    <select id="embeddingSearch1" resultType="com.tarzan.maxkb4j.module.dataset.vo.HitTestVO">
        <![CDATA[
            SELECT  paragraph_id, (2 - (embedding <=> #{referenceEmbedding }::vector)) / 2 AS comprehensive_score  FROM embedding WHERE round((embedding <=> #{referenceEmbedding }::vector):: numeric, 8) <= round((2 - 2 * #{minScore})::numeric, 8)  ORDER BY paragraph_id,embedding <=> #{referenceEmbedding }::vector LIMIT #{maxResults};
       ]]>
    </select>

    <select id="keywordsSearch" resultType="com.tarzan.maxkb4j.module.dataset.vo.HitTestVO">
        SELECT
            paragraph_id,
            comprehensive_score,
            comprehensive_score AS similarity
        FROM
            (
            SELECT DISTINCT ON (paragraph_id) paragraph_id,
                   ts_rank_cd( search_vector, to_tsquery(#{query.query_text} ), 0 ) AS comprehensive_score
                              FROM embedding
                                WHERE
                                dataset_id IN
                                <foreach item="id" collection="datasetIds" open="(" separator="," close=")">
                                    #{id}
                                </foreach>
                                AND is_active
              ) T
        WHERE T.comprehensive_score > #{query.similarity}
        ORDER BY
            T.comprehensive_score DESC
            LIMIT #{query.top_number}
    </select>

    <select id="keywordsSearch1" resultType="com.tarzan.maxkb4j.module.dataset.vo.HitTestVO">
        SELECT
        paragraph_id,
        comprehensive_score,
        comprehensive_score AS similarity
        FROM
        (
        SELECT DISTINCT ON (paragraph_id) paragraph_id,
        ts_rank_cd( search_vector, to_tsquery(#{query.query_text} ), 0 ) AS comprehensive_score
        FROM embedding
        WHERE
        dataset_id IN
        <foreach item="id" collection="datasetIds" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND is_active
        AND search_vector @@to_tsquery(#{query.query_text})
        ) T
        WHERE T.comprehensive_score > #{query.similarity}
        ORDER BY
        T.comprehensive_score DESC
        LIMIT 10
    </select>
    <select id="HybridSearch" resultType="com.tarzan.maxkb4j.module.dataset.vo.HitTestVO">
        SELECT paragraph_id,
               comprehensive_score,
               comprehensive_score AS similarity
        FROM (SELECT DISTINCT
              ON (paragraph_id)
                  paragraph_id,
                  similarity AS comprehensive_score
              FROM
                  ((1-( <![CDATA[embedding <=> CAST(#{ embedding } AS vector)]]> ))+ts_rank_cd( search_vector, to_tsquery(#{query.query_text} ), 0 )) AS similarity
                  FROM embedding
                  WHERE
                    dataset_id IN
                    <foreach item="id" collection="datasetIds" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                  AND is_active) TEMP
              ORDER BY
                  paragraph_id,
                  similarity DESC) DISTINCT_TEMP
        WHERE comprehensive_score > #{query.similarity }
        ORDER BY comprehensive_score DESC
            LIMIT #{query.top_number}
    </select>

</mapper>
