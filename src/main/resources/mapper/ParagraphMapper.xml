<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tarzan.maxkb4j.module.dataset.mapper.ParagraphMapper">
    <update id="updateStatusByIds">
        UPDATE "paragraph"
        SET status = reverse (
                SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM 1 FOR #{up} ) || #{status} || SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM #{next} )
                     ),
            status_meta = jsonb_set (
                    "paragraph".status_meta,
                    ARRAY['state_time', #{type}::TEXT],
                    jsonb_set (
                            COALESCE ( "paragraph".status_meta #> ARRAY['state_time', #{type}::TEXT], jsonb_build_object(#{status}, now())),
                            ARRAY[#{status}::TEXT],
                            CONCAT ( '"', now( ), '"' ) :: JSONB
                    )
         ) WHERE "paragraph"."id" IN
        <foreach item="paragraphId" collection="paragraphIds" open="(" separator="," close=")">
            #{paragraphId}
        </foreach>
    </update>

    <update id="updateStatusById">
        UPDATE "paragraph"
        SET status = reverse (
        SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM 1 FOR #{up} ) || #{status} || SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM #{next} )
        ),
        status_meta = jsonb_set (
        "paragraph".status_meta,
        ARRAY['state_time', #{type}::TEXT],
        jsonb_set (
        COALESCE ( "paragraph".status_meta #> ARRAY['state_time', #{type}::TEXT], jsonb_build_object(#{status}, now())),
        ARRAY[#{status}::TEXT],
        CONCAT ( '"', now( ), '"' ) :: JSONB
        )
        ) WHERE "paragraph"."id" =   #{paragraphId}
    </update>

    <update id="updateStatusByDocId">
        UPDATE "paragraph"
        SET status = reverse (
                SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM 1 FOR #{up} ) || #{status} || SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM #{next} )
                     ),
            status_meta = jsonb_set (
                    "paragraph".status_meta,
                    ARRAY['state_time', #{type}::TEXT],
                    jsonb_set (
                            COALESCE ( "paragraph".status_meta #> ARRAY['state_time', #{type}::TEXT], jsonb_build_object(#{status}, now())),
                            ARRAY[#{status}::TEXT],
                            CONCAT ( '"', now( ), '"' ) :: JSONB
                    )
                          ) WHERE "paragraph"."document_id" =   #{docId}
    </update>

    <update id="updateStatusByDocIds">
        UPDATE "paragraph"
        SET status = reverse (
                SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM 1 FOR #{up} ) || #{status} || SUBSTRING ( reverse ( LPAD( status, 3, 'n' ) ) :: TEXT FROM #{next} )
                     ),
            status_meta = jsonb_set (
                    "paragraph".status_meta,
                    ARRAY['state_time', #{type}::TEXT],
                    jsonb_set (
                            COALESCE ( "paragraph".status_meta #> ARRAY['state_time', #{type}::TEXT], jsonb_build_object(#{status}, now())),
                            ARRAY[#{status}::TEXT],
                            CONCAT ( '"', now( ), '"' ) :: JSONB
                    )
                          ) WHERE "paragraph"."document_id" IN
        <foreach item="docId" collection="docIds" open="(" separator="," close=")">
            #{docId}
        </foreach>
    </update>

    <select id="retrievalParagraph" resultType="com.tarzan.maxkb4j.module.dataset.domain.vo.ParagraphVO">
        SELECT
            ph.*,
            doc."name" AS document_name,
            doc."hit_handling_method",
            doc."directly_return_similarity"
        FROM
            paragraph ph
                LEFT JOIN "document" doc ON ph.document_id = doc.ID
        WHERE ph.id IN
        <foreach item="id" collection="paragraphIds" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>
